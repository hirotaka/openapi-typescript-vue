openapi: 3.0.3
info:
  title: Blog API
  description: A simple blog API for demonstrating openapi-vue-query
  version: 1.0.0
servers:
  - url: https://myapi.dev/v1
    description: Production server

paths:
  /blogposts/{post_id}:
    get:
      summary: Get a blog post by ID
      description: Retrieve a specific blog post by its ID
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 5
          description: The ID of the blog post to retrieve
      responses:
        '200':
          description: Blog post retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '404':
          description: Blog post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blogposts:
    get:
      summary: List all blog posts
      description: Retrieve a list of all blog posts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of posts per page
      responses:
        '200':
          description: List of blog posts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/BlogPost'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new blog post
      description: Create a new blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlogPost'
      responses:
        '201':
          description: Blog post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    BlogPost:
      type: object
      required:
        - id
        - title
        - content
        - author
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
          example: 5
          description: Unique identifier for the blog post
        title:
          type: string
          example: "Getting Started with Vue 3"
          description: Title of the blog post
        content:
          type: string
          example: "Vue 3 brings many exciting features..."
          description: Content of the blog post
        author:
          $ref: '#/components/schemas/Author'
        tags:
          type: array
          items:
            type: string
          example: ["vue", "javascript", "frontend"]
          description: Tags associated with the blog post
        created_at:
          type: string
          format: date-time
          example: "2023-12-01T10:00:00Z"
          description: When the blog post was created
        updated_at:
          type: string
          format: date-time
          example: "2023-12-01T10:00:00Z"
          description: When the blog post was last updated

    CreateBlogPost:
      type: object
      required:
        - title
        - content
        - author_id
      properties:
        title:
          type: string
          example: "Getting Started with Vue 3"
          description: Title of the blog post
        content:
          type: string
          example: "Vue 3 brings many exciting features..."
          description: Content of the blog post
        author_id:
          type: integer
          format: int64
          example: 1
          description: ID of the author
        tags:
          type: array
          items:
            type: string
          example: ["vue", "javascript", "frontend"]
          description: Tags associated with the blog post

    Author:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: Unique identifier for the author
        name:
          type: string
          example: "John Doe"
          description: Name of the author
        email:
          type: string
          format: email
          example: "john.doe@example.com"
          description: Email address of the author
        bio:
          type: string
          example: "Full-stack developer with 5 years of experience"
          description: Short biography of the author

    Pagination:
      type: object
      required:
        - page
        - limit
        - total
        - total_pages
      properties:
        page:
          type: integer
          example: 1
          description: Current page number
        limit:
          type: integer
          example: 10
          description: Number of items per page
        total:
          type: integer
          example: 25
          description: Total number of items
        total_pages:
          type: integer
          example: 3
          description: Total number of pages

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Blog post not found"
          description: Error message describing what went wrong
        code:
          type: string
          example: "NOT_FOUND"
          description: Error code for programmatic handling